#!/usr/bin/env bash

# Copyright (c) 2007 - 2016
#   Jose V Beneyto, <sepen@crux.nu>
#   Victor Martinez, <pitillo@ono.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# readonly variables
readonly export SCX_APPNAME="safe-crux"
readonly export SCX_APPVERSION="3.2"
readonly export SCX_APPDIR="$(cd $(dirname $0); pwd -P)"
readonly export SCX_SCXDIR="$SCX_APPDIR/scx.d"
readonly export SCX_BINDIR="$SCX_APPDIR/bin"
readonly export SCX_LIBDIR="$SCX_APPDIR/lib"

# system-wide config file
export SCX_CONFIG="$SCX_APPDIR/safe-crux.conf"

# variables which can be override by config file
loadConf() {
    [ -f "$SCX_CONFIG" ] && source $SCX_CONFIG
    export SCX_VARDIR="$SCX_APPDIR/var"
    [ -d "$SCX_VARDIR" ] ||Â mkdir -p $SCX_VARDIR
    export SCX_ISODIR="$SCX_VARDIR/iso"
    [ -d "$SCX_ISODIR" ] || mkdir -p $SCX_ISODIR
    export SCX_MNTDIR="$SCX_VARDIR/mnt"
    [ -d "$SCX_MNTDIR" ] || mkdir -p $SCX_MNTDIR
    export SCX_TARGETDIR="$SCX_VARDIR/target"
    [ -d "$SCX_TARGETDIR" ] || mkdir -p $SCX_TARGETDIR
    export SCX_RUNFILE="$SCX_VARDIR/run/status"
    export SCX_CHROOTSHELL="/bin/bash"
}

# main function
main() {
    local cmd="$1"
    shift
    if [ -r "$SCX_LIBDIR"/"$cmd" ]; then
        source "$SCX_LIBDIR"/"$cmd"
        scx${cmd^} $@
    else
        scxHelp $@
    fi
}

# load config file
loadConf

# load main library file
source "$SCX_LIBDIR"/scx

# parse input
while getopts :hVec: opt; do
    case "$opt" in
        h) main "help" ;;
        V) main "version" ;;
        e) main "env" ;;
        c) [ -f "$OPTARG" ] && SCX_CONFIG="$OPTARG" ;;
    esac
    shift $((OPTIND-1))
done

# check input
[ $# -eq 0 ] && scxHelp

# load config file again to override settings
loadConf

# capture system signals
trap "msgError interrupted" SIGINT SIGTERM

# execute main function
main $@

# End of file
