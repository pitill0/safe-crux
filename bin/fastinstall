#!/bin/bash
#
# fakesetup: Fake setup installation script for CRUX.
#

msgUsage() {
  echo "Usage: $0 ORIG DEST <options>"
  echo "Where options are:"
  echo "   -y|--yes            Ask yes to all questions"
  echo "   --with-pkgadd=FILE  use FILE as alternative pkgadd binary"
  exit 0
}

msgError() {
  echo "Error, $@" 2>&1
  exit 1
}

main() {
  # adjust the pkg database
  if [ ! -d $DESTDIR/var/lib/pkg ]; then
    echo "+ Initializating package database ..."
    install -d -m 0755 $DESTDIR/var/lib/pkg
    touch $DESTDIR/var/lib/pkg/db
  fi
  if [ -d $DESTDIR/var/lib/pkg/rejected ]; then
    echo "+ Removing rejected file from package database stuff ..."
    rm -rf $DESTDIR/var/lib/pkg/rejected
  fi
  # install packages
  echo "+ Installing packages ..."
  for pkg in $(find $PKGDIR -type f -name '*.pkg.tar.*'); do
    echo "$(basename $pkg) "
    $PKGADD -r $DESTDIR $pkg
  done
}

[ $# -lt 2 ] && msgUsage
[ $# -gt 3 ] && msgUsage

[ ! -d "$1" ] && msgError "'$1' is not a path"
[ ! -d "$2" ] && msgError "'$2' is not a path"

PKGDIR=$1
DESTDIR=$2

[ $# -eq 3 ] && OPTIONS=$3

FORCE=0
PKGADD="/usr/bin/pkgadd"

case $OPTIONS in
  -y|--yes) FORCE=1 ;;
  --with-pkgadd=*) PKGADD="${OPTIONS##*=}" ;;
  *) msgUsage ;;
esac
  
[ ! -f $PKGADD ] && msgError "can't find pkgadd command in '$PKGADD'"

# handle signals
trap "msgError interrupted" SIGINT SIGTERM

if [ $FORCE -ne 1 ]; then
  cat <<EOF
You're going to install with the following parameters:
destdir : $DESTDIR
pkgdir  : $PKGDIR
pkgadd  : $PKGADD
EOF
  read -p "Continue? (y,n) " answer
  [ "$answer" != "y" ] && exit 1
fi

main

exit 0

# End of file
