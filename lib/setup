scxSetupHelp() {
    cat << __EOF__
Usage: $SCX_APPNAME setup [option(s)] CRUX_VERSION TARGET

Options:

  -h       Print usage and quit
  -l       Print available CRUX_VERSION setup files
  -t TYPE  Target type (options: dir, block and file)

Examples:

  $SCX_APPNAME setup -t file  x86_64 /tmp/crux-x86_64.img
  $SCX_APPNAME setup -t dir   x86_64 /tmp/crux-x86_64
  $SCX_APPNAME setup -t block x86_64 /dev/sdb1
__EOF__
    exit 0
}

scxSetupList() {
    find "$SCX_SCXDIR" -maxdepth 1 -mindepth 1 -exec basename {} \;
    exit 0
}

scxSetupLoadVersion() {
    local scx_version="$1"
    [ -f "$SCX_SCXDIR/$scx_version" ] || msgError "'$SCX_SCXDIR/$scx_version' not found"
    # TODO: check if required vars and functions are available or show error
    source "$SCX_SCXDIR/$scx_version"
}

scxSetupPrepareIso() {
    local cmd_wget="wget -nv -c -t 3 --waitretry=3 -P $SCX_ISODIR"
    local iso_uri="$1"
    local iso_md5="$2"
    # TODO: check if wget command is available or show error
    # download files
    sudo $cmd_wget $iso_uri
    sudo $cmd_wget $iso_md5
    # check md5sum
    local iso_md5file="${iso_md5##*/}"
    local cmd_md5sum="md5sum"
    # TODO: check if md5sum matches or show error
    cd $SCX_ISODIR && sudo md5sum -c "$iso_md5file"
    # mount iso
    # TODO: check if mkdir success or show error
    sudo mkdir -p $SCX_ISODIR/mnt
    local iso_file="${iso_uri##*/}"
    sudo mount -o loop,ro -t iso9660 $iso_file $SCX_ISODIR/mnt
}

scxSetupLeaveIso() {
    sudo umount $SCX_ISODIR/mnt >/dev/null 2>&1
}

scxSetupPrepareTarget() {
    local target="$1"
    local target_type="$2"
    # TODO: remove hardcoded vars from here
    local image_size="1024"
    local image_fstype="ext2"
    case "$target_type" in
        dir)
            [ "$target" = "" ] && target="$SCX_TARGETDIR/crux"
            [ ! -d "$target" ] && mkdir -p "$target"
            SCX_MNTDIR="$target"
            ;;
        block)
            sudo mount "$target" "$SCX_MNTDIR"
            ;;
        file)
            # TODO: refactor as makeImageFile
            [ "$target" = "" ] && target="$SCX_TARGETDIR/crux.img"
            if [ ! -f "$target" ]; then
                echo "makeImageFile size:1GB"
                if [ -f $target ]; then
                    read -p "File $target found, do you want to remove it [y|n] " response
                    [ "$response" = "y" ] && rm -vf $target
                fi
                sudo dd if=/dev/zero of=$target bs=1M count=$image_size
            fi
            sudo mkfs -t $image_fstype -q $target
            sudo mount -o loop,rw "$target" "$SCX_MNTDIR"
            ;;
        *)
            scxSetupHelp
            ;;
    esac
}

scxSetupLeaveTarget() {
    sudo umount $SCX_MNTDIR >/dev/null 2>&1
}

scxSetup() {
    local tmpdir="$(mktemp -d)"
    local setup_type= setup_version= setup_target=
    [ $# -eq 0 ] && scxSetupHelp
    while getopts :hlt: opt; do
        case "$opt" in
            h) scxSetupHelp ;;
            l) scxSetupList ;;
            t) setup_type="$OPTARG" ;;
        esac
        shift $((OPTIND-1))
    done
    setup_version="$1"
    setup_target="$2"
    scxSetupLoadVersion "$setup_version"
    scxSetupPrepareIso "$scx_uri" "$scx_md5"
    scxSetupPrepareTarget "$setup_target" "$setup_type"
    read -p "You will setup $setup_version on $SCX_MNTDIR [y|n]? " response
    [ "$response" != "y" ] && exit 0
    cd $tmpdir
    scx-setup
    sudo rm -rf $tmpdir
    scxSetupLeaveIso
    scxSetupLeaveTarget
}