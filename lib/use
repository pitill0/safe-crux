#!/usr/bin/env bash

scxUseHelp() {
    cat << __EOF__
Usage: $SCX_APPNAME use TARGET [cmd]

Options:

  -h       Print usage and quit

Examples:

  $SCX_APPNAME use /tmp/crux-x86_64.img
  $SCX_APPNAME use /tmp/crux-x86_64
  $SCX_APPNAME use /dev/sdb1 "cat /etc/hosts"
__EOF__
    exit 0
}

scxUsePrepareTarget() {
    local target="$1"
    local target_type="$(getTargetType $target)"
    SCX_MNTDIR="$(getMountDir $target)"
    sudo mkdir -p $SCX_MNTDIR
    case "$target_type" in
        dir)
            # do nothing
            ;;
        block)
            if ! mountpoint -q $SCX_MNTDIR; then
                sudo mount -o rw "$target" "$SCX_MNTDIR"
            fi
            ;;
        file)
            if ! mountpoint -q $SCX_MNTDIR; then
                sudo mount -o loop,rw "$target" "$SCX_MNTDIR"
            fi
            ;;
        *)
            scxUseHelp
            ;;
    esac
    printf "%-10s %s\n" $$ $SCX_MNTDIR | sudo tee -a $SCX_RUNFILE >/dev/null
}

scxUseLeaveTarget() {
    sudo umount $SCX_MNTDIR >/dev/null 2>&1
    sudo sed "/^$$ /d" -i $SCX_RUNFILE
    # cleanup old entries
    while read pid target; do
      sudo test -d /proc/$pid || sudo sed "/^$pid /d" -i $SCX_RUNFILE
    done < $SCX_RUNFILE
}

scxUse() {
    local cmd_chroot="$SCX_BINDIR/chrooted"
    #cmd_chroot="setarch ARCH $SCX_BINDIR/chrooted"
    local target=
    [ $# -eq 0 ] || [ "$1" = "-h" ] && scxUseHelp
    target="$(getTarget $1)"
    scxUsePrepareTarget "$target"
    # chroot the mount point
    if [ $# -gt 1 ]; then
        # pass user commands to the environment
        shift
        echo $@ | sudo $cmd_chroot $SCX_MNTDIR $SCX_CHROOTSHELL
    else
        sudo $cmd_chroot $SCX_MNTDIR $SCX_CHROOTSHELL
    fi
    scxUseLeaveTarget
}
